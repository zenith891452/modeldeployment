# -*- coding: utf-8 -*-
"""Untitled12.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1stZriG8guhuMQIfPZlFVXaqPv2214SOA
"""

pip install streamlit

import streamlit as st
import pandas as pd
import pickle

# Muat model dan encoder
with open('/content/best_model_oop.pkl', 'rb') as f:
    model = pickle.load(f)

with open('/content/label_encoders.pkl', 'rb') as f:
    label_encoders = pickle.load(f)

st.title("Hotel Booking Cancellation Prediction")

# Input form untuk data prediksi
with st.form("booking_form"):
    booking_id = st.text_input("Booking ID", "INN00001")
    no_of_adults = st.number_input("Number of Adults", min_value=1, max_value=10, value=2)
    no_of_children = st.number_input("Number of Children", min_value=0, max_value=10, value=1)
    no_of_weekend_nights = st.number_input("Weekend Nights", min_value=0, max_value=10, value=2)
    no_of_week_nights = st.number_input("Week Nights", min_value=0, max_value=10, value=3)
    type_of_meal_plan = st.selectbox("Meal Plan", ['Meal Plan 1', 'Meal Plan 2', 'Not Selected', 'Meal Plan 3'])
    required_car_parking_space = st.selectbox("Need Parking?", [0, 1])
    room_type_reserved = st.selectbox("Room Type", ['Room_Type 1', 'Room_Type 2', 'Room_Type 3', 'Room_Type 4', 'Room_Type 5', 'Room_Type 6', 'Room_Type 7'])
    lead_time = st.number_input("Lead Time (days)", min_value=0, max_value=500, value=224)
    arrival_year = st.selectbox("Arrival Year", [2017, 2018])
    arrival_month = st.selectbox("Arrival Month", list(range(1, 13)))
    arrival_date = st.selectbox("Arrival Date", list(range(1, 32)))
    market_segment_type = st.selectbox("Market Segment", ['Offline', 'Online', 'Corporate', 'Complementary', 'Aviation', 'Digital', 'Undefined'])
    repeated_guest = st.selectbox("Repeated Guest?", [0, 1])
    no_of_previous_cancellations = st.number_input("Previous Cancellations", min_value=0, max_value=20, value=0)
    no_of_previous_bookings_not_canceled = st.number_input("Previous Bookings Not Canceled", min_value=0, max_value=20, value=0)
    avg_price_per_room = st.number_input("Average Price per Room", min_value=0.0, max_value=1000.0, value=65.0)
    no_of_special_requests = st.number_input("Number of Special Requests", min_value=0, max_value=5, value=0)

    submitted = st.form_submit_button("Predict")

# Proses prediksi jika form disubmit
if submitted:
    # Buat dictionary input
    input_data = {
        'Booking_ID': booking_id,
        'no_of_adults': no_of_adults,
        'no_of_children': no_of_children,
        'no_of_weekend_nights': no_of_weekend_nights,
        'no_of_week_nights': no_of_week_nights,
        'type_of_meal_plan_Meal Plan 2': 1 if type_of_meal_plan == 'Meal Plan 2' else 0,
        'type_of_meal_plan_Meal Plan 3': 1 if type_of_meal_plan == 'Meal Plan 3' else 0,
        'type_of_meal_plan_Not Selected': 1 if type_of_meal_plan == 'Not Selected' else 0,
        'room_type_reserved_Room_Type 2': 1 if room_type_reserved == 'Room_Type 2' else 0,
        'room_type_reserved_Room_Type 3': 1 if room_type_reserved == 'Room_Type 3' else 0,
        'room_type_reserved_Room_Type 4': 1 if room_type_reserved == 'Room_Type 4' else 0,
        'room_type_reserved_Room_Type 5': 1 if room_type_reserved == 'Room_Type 5' else 0,
        'room_type_reserved_Room_Type 6': 1 if room_type_reserved == 'Room_Type 6' else 0,
        'room_type_reserved_Room_Type 7': 1 if room_type_reserved == 'Room_Type 7' else 0,
        'lead_time': lead_time,
        'arrival_year': arrival_year,
        'arrival_month': arrival_month,
        'arrival_date': arrival_date,
        'market_segment_type_Corporate': 1 if market_segment_type == 'Corporate' else 0,
        'market_segment_type_Offline': 1 if market_segment_type == 'Offline' else 0,
        'market_segment_type_Online': 1 if market_segment_type == 'Online' else 0,
        'market_segment_type_Complementary': 1 if market_segment_type == 'Complementary' else 0,
        'repeated_guest': repeated_guest,
        'no_of_previous_cancellations': no_of_previous_cancellations,
        'no_of_previous_bookings_not_canceled': no_of_previous_bookings_not_canceled,
        'avg_price_per_room': avg_price_per_room,
        'no_of_special_requests': no_of_special_requests
    }

    # Menambahkan kolom yang hilang (0 untuk fitur yang tidak diisi)
    input_data['room_type_reserved_Room_Type 1'] = 0
    input_data['type_of_meal_plan_Meal Plan 1'] = 0
    input_data['market_segment_type_Aviation'] = 0

    # Membuat DataFrame dari input
    df_input = pd.DataFrame(input_data, index=[0])

    # Menyusun urutan kolom sesuai dengan fitur model
    feature_order = ['no_of_adults', 'no_of_children', 'no_of_weekend_nights', 'no_of_week_nights', 'lead_time',
                     'arrival_year', 'arrival_month', 'arrival_date', 'repeated_guest', 'no_of_previous_cancellations',
                     'no_of_previous_bookings_not_canceled', 'avg_price_per_room', 'no_of_special_requests',
                     'type_of_meal_plan_Meal Plan 1', 'type_of_meal_plan_Meal Plan 2', 'type_of_meal_plan_Meal Plan 3',
                     'type_of_meal_plan_Not Selected', 'room_type_reserved_Room_Type 1', 'room_type_reserved_Room_Type 2',
                     'room_type_reserved_Room_Type 3', 'room_type_reserved_Room_Type 4', 'room_type_reserved_Room_Type 5',
                     'room_type_reserved_Room_Type 6', 'room_type_reserved_Room_Type 7', 'market_segment_type_Aviation',
                     'market_segment_type_Complementary', 'market_segment_type_Corporate', 'market_segment_type_Offline',
                     'market_segment_type_Online']

    df_input = df_input[feature_order]

    # Menampilkan data yang diproses untuk prediksi
    st.write("Data yang telah diproses untuk prediksi:")
    st.write(df_input)

    # Lakukan prediksi
    prediction = model.predict(df_input)[0]
    probability = model.predict_proba(df_input)[:, 1]  # Probability untuk kelas "Canceled"

    # Menampilkan hasil prediksi dan probabilitas
    status = "Not Cancelled" if prediction == 0 else "Cancelled"
    st.write(f"Prediction Result: {status}")
    st.write(f"Cancellation Probability: {probability[0]:.2%}")